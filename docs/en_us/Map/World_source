class World;
  Most important part in this file.

  struct MemoryOfMap;
    Role's memory of a map. Two Point and a Vector array means the seenable area.
    A Map class saves details.
    // You can find more informations about Point struct in Map/Map.h.
    // You can find more informations about Map class in Map/.

  inline World(UniformIntRandom* const ran, MapBuilder* builder,
               const Rect& nms) :
               builder_(builder),
               random_gen_(ran),
               next_map_size_(nms);
    The variable ran is a random number generator, it use to build the map or
    to do something else.

  inline Map* const NewMap();
    Create a map and build things for it. Then insert it to a sorted Map list.

  inline const Map::Target GetTarget(Map& map, const Point& pos);
    Get the target of a portal. If it have no target, create a new map and pick
    a random target for it.

  inline void Arrive(Map& map);
  inline void Left(Map& map);
    Record how many links to this map. If a map have no link, it'll be deleted.

  inline MemoryOfMap& GetMemory(int32_t obj_id, Map& map);
    Get the role's memory of the map by search in the memory list.
